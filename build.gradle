System.setProperty("file.encoding", "UTF-8")

buildscript {
    repositories {
        jcenter()
        maven {
            url "${System.properties['user.home']}/.m2/repository/"
        }

        maven {
            url "https://sandec.jfrog.io/artifactory/repo"
        }

        maven {
            url "http://mix-software.com:8081/nexus/content/repositories/jpro-snapshots"
        }

        maven {
            url "http://mix-software.com:8081/nexus/content/repositories/jpro"
        }
    }

    dependencies {
        classpath "SANDEC:simplefx-plugin-gradle:$simplefxVersion"
        classpath "com.sandec.jpro:jpro-plugin-gradle:$JPRO_PLUGIN_VERSION"
    }
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        mavenLocal()

        maven {
            url "https://sandec.jfrog.io/artifactory/repo"
        }
    }


    apply plugin: 'java'
    apply plugin: 'de.sandec.simplefx'

    compileScala.targetCompatibility = 1.8

    simplefx {
        scalaVersion = "$SCALA_VERSION"
        scalaVersionShort = "$SCALA_VERSION_SHORT"
    }

    group = 'SANDEC'
    version = "$jnodesVersion"

    dependencies {
        testCompile "junit:junit:4.12"
    }
}

configure([project(':example')]) {
    dependencies {
        compile rootProject
        compile project(':jnodes-devices')
        compile project(':jnodes-config')

        // shouldn't be required, have to investigate!
        compile group: 'org.scala-lang', name: 'scala-reflect', version: SCALA_VERSION
        compile "org.scala-lang:scala-reflect:$SCALA_VERSION"
    }
    //apply plugin: 'java'
    //apply plugin: 'de.sandec.simplefx'
    apply plugin: 'application'
    apply plugin: 'com.sandec.jpro'

    //mainClassName = 'jnodes.example.StartScreenTest'
    mainClassName = 'jnodes.example.StartTestConfigurable'
    mainClassName = 'jnodes.example.StartTestCSS'

    jpro {
        if (project.hasProperty('JPRO_LICENSE_USERNAME')) {
            username     ="$JPRO_LICENSE_USERNAME"
            password     ="$JPRO_LICENSE_PASSWORD"
            licensenumber="$JPRO_LICENSE_LICENSENUMBER"
        }
    }

    apply plugin: 'com.google.osdetector'
    ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

    dependencies {
        // Add your dependencies here, for example:
        compile "org.openjfx:javafx-base:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-graphics:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-controls:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-fxml:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-media:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-web:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-swing:$JAVAFX_VERSION:$platform"
    }
}

configure([rootProject, project(':jnodes-devices'), project(':jnodes-lang') ,project(':jnodes-config')]) {

    apply plugin: 'java'
    apply plugin: 'de.sandec.simplefx'
    apply plugin: 'maven-publish'

    simplefx {
        scalaVersion = "$SCALA_VERSION"
        scalaVersionShort = "$SCALA_VERSION_SHORT"
    }

    apply plugin: 'com.google.osdetector'
    ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

    dependencies {
        // Add your dependencies here, for example:
        compile "org.openjfx:javafx-base:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-graphics:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-controls:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-fxml:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-media:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-web:$JAVAFX_VERSION:$platform"
        compile "org.openjfx:javafx-swing:$JAVAFX_VERSION:$platform"
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    test {
        jvmArgs = ['-Dglass.platform=Monocle', '-Dmonocle.platform=Headless']
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                groupId project.group
                artifactId project.name
                version project.version
            }
        }
        repositories {
            maven {
                name = "artifactory"
                url = "https://sandec.jfrog.io/artifactory/repo"
                credentials {
                    username System.getenv("SANDEC_ARTIFACTORY_USERNAME")
                    password System.getenv("SANDEC_ARTIFACTORY_PASSWORD")
                }
            }
        }
    }

}

configure([project(':jnodes-devices')]) {
    dependencies {
        compile rootProject
        testCompile 'junit:junit:4.12'
    }
}

configure([project(':jnodes-config')]) {
    dependencies {
        compile rootProject
        testCompile 'junit:junit:4.12'
    }
}

configure([project(':jnodes-lang')]) {
    dependencies {
        compile rootProject
        compile "com.typesafe:config:1.3.1"
        testCompile 'junit:junit:4.12'
    }
}




