System.setProperty("file.encoding", "UTF-8")

buildscript {
    repositories {
        jcenter()
        maven {
            url "${System.properties['user.home']}/.m2/repository/"
        }

        maven {
            url "http://sandec.bintray.com/repo"
        }

        maven {
            url "http://mix-software.com:8081/nexus/content/repositories/jpro-snapshots"
        }

        maven {
            url "http://mix-software.com:8081/nexus/content/repositories/jpro"
        }
    }

    dependencies {
        classpath "SANDEC:simplefx-plugin-gradle:$simplefxVersion"
        classpath "com.sandec.jpro:jpro-plugin-gradle:$JPRO_PLUGIN_VERSION"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "${System.properties['user.home']}/.m2/repository/"
        }

        maven {
            url "http://sandec.bintray.com/repo"
        }
    }

    apply plugin: 'java'
    apply plugin: 'de.sandec.simplefx'

    group = 'SANDEC'
    version = "$jnodesVersion"

    dependencies {
        testCompile "junit:junit:4.12"
    }
}

configure([project(':example')]) {
    dependencies {
        compile rootProject
        compile project(':jnodes-devices')
        compile project(':jnodes-config')

        // shouldn't be required, have to investigate!
        compile group: 'org.scala-lang', name: 'scala-reflect', version: '2.11.11'
        compile "org.scala-lang:scala-reflect:2.11.11"
    }
    //apply plugin: 'java'
    //apply plugin: 'de.sandec.simplefx'
    apply plugin: 'application'
    apply plugin: 'com.sandec.jpro'

    //mainClassName = 'jnodes.example.ScreenTest'
    mainClassName = 'jnodes.example.TestConfigurable'

    jpro {
        if (project.hasProperty('JPRO_LICENSE_USERNAME')) {
            username     ="$JPRO_LICENSE_USERNAME"
            password     ="$JPRO_LICENSE_PASSWORD"
            licensenumber="$JPRO_LICENSE_LICENSENUMBER"
        }
    }
}

configure([rootProject, project(':jnodes-devices'), project(':jnodes-lang') ,project(':jnodes-config')]) {

    apply plugin: 'java'
    apply plugin: 'de.sandec.simplefx'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    test {
        jvmArgs = ['-Dglass.platform=Monocle', '-Dmonocle.platform=Headless']
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set("sources")
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                groupId project.group
                artifactId project.name
                version project.version
                artifact sourcesJar
            }
        }
    }

    bintray {
        if(project.hasProperty("BINTRAY_USER")) {
            user = BINTRAY_USER
            key  = BINTRAY_KEY
        }
        publications = ['mavenJava']
        publish = true
        override = true
        pkg {
            repo = 'repo'
            name = project.name
            userOrg = 'sandec'
        }
    }
}

configure([project(':jnodes-devices')]) {
    dependencies {
        compile rootProject
        testCompile 'junit:junit:4.12'
    }
}

configure([project(':jnodes-config')]) {
    dependencies {
        compile rootProject
        testCompile 'junit:junit:4.12'
    }
}

configure([project(':jnodes-lang')]) {
    dependencies {
        compile rootProject
        compile "com.typesafe:config:1.3.1"
        testCompile 'junit:junit:4.12'
    }
}




